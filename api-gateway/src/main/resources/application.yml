server:
  port: 8000


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka


spring:
  application:
    name: 'apigateway-service'
  cloud:
    gateway:
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE      # Eureka에 등록되어있는 서비스 이름쪽으로 보냅니다.
#          predicates:
#            - Path=/user-service/**   # 8000/user-service/**로 들어오는 모든 클라이언트 요청은
        # 로그인
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/login
#            - Method=POST
#          filters:
##            - RemoveRequestHeader=Cookie #POST로 전달된 값은 새로운 데이터처럼 인식하기 위해서 RequestHeader값을 초기화시켜줍니다.
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#
#        # 회원가입
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/users
#            - Method=POST
#          filters:
##            - RemoveRequestHeader=Cookie #POST로 전달된 값은 새로운 데이터처럼 인식하기 위해서 RequestHeader값을 초기화시켜줍니다.
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # User micro service
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
#            - Method=GET
          filters:
#            - RemoveRequestHeader=Cookie #POST로 전달된 값은 새로운 데이터처럼 인식하기 위해서 RequestHeader값을 초기화시켜줍니다.
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # Product micro service
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product-service/**

        # Order micro service
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

        # Cart micro service
        - id: cart-service
          uri: lb://CART-SERVICE
          predicates:
            - Path=/cart-service/**
